static int equalPartition(int N, int arr[])
    {
        // code here
        int sum = 0;
        for(int i = 0; i < N; i++){
            sum += arr[i];
        }
        if(sum%2 != 0)
            return -1;
            
        boolean[][] dp = new boolean[N+1][sum+1];
        for(int i = 0; i < N+1; i++){
            dp[i][0] = true;
        }
        // In Java we can remove this loop as by default boolean array is initialised false
        // for(int j = 1; j < sum+1; j++){
        //     dp[0][j] = false;        
        // }
        
        for(int i = 1; i < N+1; i++){
            for(int j = 1; j < (sum/2)+1; j++){
                if(arr[i-1] <= j) {
                    dp[i][j] = (dp[i-1][j-arr[i-1]] || dp[i-1][j]);
                }
                else
                    dp[i][j] = dp[i-1][j];
            }
        }
        if(dp[N][sum/2] == true)
            return 1;
        else 
            return 0;
    }
